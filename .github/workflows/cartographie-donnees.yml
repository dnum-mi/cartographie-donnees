name: Cartographie des donn√©es MI

on:
  push:
    branches:
      - main
      - staging
  pull_request:
    branches:
      - main
      - staging

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install backend dependencies
      working-directory: ./backend
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        pip install -r requirements.txt
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: '14.x'
    - name: Build frontend
      working-directory: ./frontend
      run: |
        npm ci
        npm run build --production
    - name: Move frontend build to the backend folder
      run: |
        mv ./frontend/build ./backend/
    - name: Test with pytest
      working-directory: ./backend
      run: |
        pytest ./tests/
  deploy-staging:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging'
    steps:
    - uses: actions/checkout@v3
    - name: Install scalingo CLI
      run: curl -O https://cli-dl.scalingo.io/install && bash install
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: '14.x'
    - name: Build frontend
      working-directory: ./frontend
      run: |
        npm ci
        npm run build --production
    - name: Setup frontend/backend directory
      run: |
        cp -R ./backend/ ./out/
        cp -R ./frontend/build/ ./out/build/
    - name: Build backend
      run: tar -cvzf backend.tar.gz ./out
    - name: Deploy to Scalingo
      run: |
        scalingo login --api-token=${{secrets.SCALINGO_API_TOKEN}}
        scalingo --app=${{secrets.SCALINGO_APP_NAME}} --region=${{secrets.SCALINGO_REGION}} deploy backend.tar.gz
