# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
#     - name: Set up Python 3.10
#       uses: actions/setup-python@v3
#       with:
#         python-version: "3.10"
#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install flake8 pytest
#         if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#     - name: Lint with flake8
#       run: |
#         # stop the build if there are Python syntax errors or undefined names
#         flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#         # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#         flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#     - name: Test with pytest
#       run: |
#         pytest
    - name: Install scalingo CLI
      run: curl -O https://cli-dl.scalingo.io/install && bash install
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: '14.x'
    - name: Build frontend
      working-directory: ./frontend
      run: |
        npm ci
        npm build --production
    - name: Setup frontend/backend directory
      run: |
        cp -R ./backend/ ./out/
        cp -R ./frontend/build/ ./out/build/
    - name: Build backend
      run: tar -cvzf backend.tar.gz ./out
    - name: Deploy to Scalingo
      run: |
        scalingo login --api-token=${{secrets.SCALINGO_API_TOKEN}}
        scalingo --app=${{secrets.SCALINGO_APP_NAME}} --region=${{secrets.SCALINGO_REGION}} deploy backend.tar.gz

